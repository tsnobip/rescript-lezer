import { styleTags, tags as t } from "@lezer/highlight";

export const rescriptHighlight = styleTags({
  "let rec module type open external exception mutable": t.definitionKeyword,
  "if else switch when while for in to downto try catch": t.controlKeyword,
  "true false": t.bool,
  VariableName: t.variableName,
  VariableDefinition: t.definition(t.variableName),
  TypeName: t.typeName,
  ModuleName: t.namespace,
  ModulePrefix: t.namespace,
  ConstructorName: t.className,
  VariantConstructor: t.className,
  PolyVariantTag: t.atom,
  PropertyName: t.propertyName,
  LabelName: t.labelName,
  Number: t.number,
  String: t.string,
  Char: t.character,
  Escape: t.escape,
  ArithOp: t.arithmeticOperator,
  LogicOp: t.logicOperator,
  CompareOp: t.compareOperator,
  StringOp: t.operator,
  PipeOp: t.operator,
  "( )": t.paren,
  "[ ]": t.squareBracket,
  "{ }": t.brace,
  ". , : ;": t.separator,
  "=> =": t.definitionOperator,
  "~ ?": t.modifier,
  "|": t.punctuation,
  _: t.keyword,
  LineComment: t.lineComment,
  BlockComment: t.blockComment,

  "JSXStartTag JSXEndTag JSXSelfCloseEndTag JSXStartCloseTag": t.angleBracket,
  JSXIdentifier: t.tagName,
  JSXText: t.content,
});
