'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const insertSemi = 84,
  JSXStartTag = 1,
  LessThan = 2,
  spaces = 86,
  newline = 87,
  LineComment = 3,
  BlockComment = 4;

/* Hand-written tokenizers for ReScript tokens that can't be
   expressed by lezer's built-in tokenizer. */

const space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
               8201, 8202, 8232, 8233, 8239, 8287, 12288];

const braceR = 125, slash = 47, lt = 60;

const trackNewline = new lr.ContextTracker({
  start: false,
  shift(context, term) {
    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline
  },
  strict: false
});

const insertSemicolon = new lr.ExternalTokenizer((input, stack) => {
  let {next} = input;
  if (next == braceR || next == -1 || stack.context)
    input.acceptToken(insertSemi);
}, {contextual: true, fallback: true});

function identifierChar(ch, start) {
  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch == 95 || ch >= 192 ||
    !start && ch >= 48 && ch <= 57
}

// JSX tokenizer that also handles < comparison
const jsx = new lr.ExternalTokenizer((input, stack) => {
  if (input.next != lt) return
  input.advance();
  if (input.next == slash) return // Could be </
  
  // JSX tags don't have space after <
  // If there's space, it's likely a comparison operator
  if (space.indexOf(input.next) > -1) {
    input.acceptToken(LessThan);
    return
  }
  
  // If followed by an identifier character, it's JSX
  if (identifierChar(input.next, true)) {
    input.acceptToken(JSXStartTag);
  } else {
    // Not an identifier, treat as less-than
    input.acceptToken(LessThan);
  }
});

const rescriptHighlight = highlight.styleTags({
  "let rec module type open external exception mutable": highlight.tags.definitionKeyword,
  "if else switch when while for in to mod": highlight.tags.controlKeyword,
  "true false": highlight.tags.bool,
  VariableName: highlight.tags.variableName,
  VariableDefinition: highlight.tags.definition(highlight.tags.variableName),
  TypeName: highlight.tags.typeName,
  TypeDefinition: highlight.tags.definition(highlight.tags.typeName),
  ModuleName: highlight.tags.namespace,
  ConstructorName: highlight.tags.className,
  PropertyName: highlight.tags.propertyName,
  Label: highlight.tags.labelName,
  Number: highlight.tags.number,
  String: highlight.tags.string,
  Char: highlight.tags.character,
  Escape: highlight.tags.escape,
  ArithOp: highlight.tags.arithmeticOperator,
  LogicOp: highlight.tags.logicOperator,
  CompareOp: highlight.tags.compareOperator,
  StringOp: highlight.tags.operator,
  PipeOp: highlight.tags.operator,
  "( )": highlight.tags.paren,
  "[ ]": highlight.tags.squareBracket,
  "{ }": highlight.tags.brace,
  ". , : ;": highlight.tags.separator,
  "=> =": highlight.tags.definitionOperator,
  "~ ?": highlight.tags.modifier,
  "|": highlight.tags.punctuation,
  "_": highlight.tags.keyword,
  LineComment: highlight.tags.lineComment,
  BlockComment: highlight.tags.blockComment,
  
  "JSXStartTag JSXEndTag JSXSelfCloseEndTag JSXStartCloseTag": highlight.tags.angleBracket,
  JSXIdentifier: highlight.tags.tagName,
  JSXText: highlight.tags.content
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_identifier = {__proto__:null,let:14, rec:16, true:40, false:40, list:58, dict:64, mod:102};
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "5`Q`QqOOO!gQqOOP#kOPOOO#pOQO'#CmOOQp'#Cq'#CqOOQp'#Cr'#CrO$OQqO'#CuO$VQPO'#DOO$_QPO'#DRO$_QPO'#DUO!gQqO'#DkO%eQqO'#E_O&tQPO'#DVO'tQqO'#E[O!gQqO'#DiO(zQSO'#DnOOQp'#Dl'#DlO)POxO'#DlOOQp'#E_'#E_OOQp'#E['#E[OOQp'#Dy'#DyQ`QqOOO)[QPO'#CxO)aQPO'#C{O)fQPO'#CbQ&yQqOOP)nO!bO'#C`POOO)C?y)C?yOOOO'#Dz'#DzO)yOQO,59XOOQp,59X,59XO*XQqO'#EdO*iQPO,59aOOQO'#DQ'#DQO*nQPO'#DPO*sQPO'#EfO*{QPO,59jOOQp,59m,59mO+QQPO,59pO+VQqO,59rO+^QqO,5:VO!gQqO,59qO+eQqO,59tO+lQPO,59uO!gQqO,59xO!gQqO,59xO!gQqO,59xO!gQqO,59xO!gQqO,59xO!gQqO,59xO!gQqO,59xO+tQqO,5:TO-}QSO'#EgO.]QSO,5:YOOOp'#Ei'#EiOOOp'#EQ'#EQO)POxO,5:WO.hQSO'#DvOOQp,5:W,5:WOOQp-E7w-E7wO.pQqO,59dO.wQPO,59gOOQO'#Ce'#CeO/PQSO,58|O)iQPO,58|POOO'#Dx'#DxP/XO!bO,58zPOOO,58z,58zOOOO-E7x-E7xOOQp1G.s1G.sO/dQqO'#D{O/tQPO,5;OOOQp1G.{1G.{O!gQqO,59kO0SQPO'#D}O0_QPO,5;QOOQp1G/U1G/UO+eQqO1G/[O$_QPO'#EOO0gQPO1G/^OOQp1G/q1G/qO0oQqO1G/]O2RQPO1G/`OOQp'#D]'#D]OOQp1G/a1G/aO4WQqO1G/dO4eQqO1G/dO6xQqO1G/dO7PQqO1G/dO9ZQqO1G/dO9eQqO1G/dO:gQqO1G/dO;|QSO,5:[O<RQSO'#DqO<aQSO1G/tOOQp1G/t1G/tOOOp1G/y1G/yOOQO'#EP'#EPOOOp-E8O-E8OOOQp1G/r1G/rOOQp,5:b,5:bO<lQSO,5:bO<qQPO1G/OO<vQPO'#C}O<{QPO'#EeO=TQPO1G/RO!gQqO1G.hO=YQPO1G.hO=bQSO1G.hPOOO-E7v-E7vPOOO1G.f1G.fO=jQqO,5:gOOQO-E7y-E7yO=zQqO1G/VOOQO,5:i,5:iOOQO-E7{-E7{O>UQPO7+$vOOQO,5:j,5:jOOQO-E7|-E7|OOQO7+$x7+$xOOQp7+$z7+$zOOQO1G/v1G/vO>ZQPO,5:]OOQO-E7}-E7}OOQp7+%`7+%`OOOp7+%e7+%eOOQp1G/|1G/|OOQp7+$j7+$jO!gQqO,59iO>cQPO'#D|O>nQPO,5;POOQp7+$m7+$mO>vQqO7+$SOOQO'#Cg'#CgO=YQPO'#CjOOQO'#E^'#E^O?|QSO7+$SO!gQqO7+$SO=YQPO7+$SOOQp<<Hb<<HbOOQO'#Eh'#EhO!gQqO'#EhOOQO1G/w1G/wO@RQqO1G/TOOQO,5:h,5:hOOQO-E7z-E7zO@]QPO,59UO!gQqO<<GnO@bQqO<<GnOAhQSO<<GnOAmQqO,5;SOOQO1G.p1G.pOAtQqOAN=YO!gQqOAN=YOOQO1G0n1G0nOBzQqOG22t",
  stateData: "D^~O!xOS!yOSROS!zQQ~OP_OVhO]YO`bOcbOdbOhUOmfOnVOpgOvWOwXO!V^O!^^O#PSO#SRO#VTO~OP_O]YO`bOcbOdbOhUOmfOnVOpgOvWOwXO!V^O!^^O#PSO#SRO#VTO~O!zjO~OblO#SnO#TlO#UnO~Og#WP~P!gO#PqOk#YP~O#PSO~O{yOQ#RX]#RX!O#RX!R#RX!S#RX!T#RX!U#RX!V#RX!W#RX!X#RX!Y#RX!Z#RX![#RX[#RX~OP#RXV#RX`#RXc#RXd#RXh#RXm#RXn#RXp#RXv#RXw#RX!^#RX!u#RX#P#RX#S#RX#V#RXg#RXj#RXk#RX~P$dO{yO~OQ!QO]zO!O{O!R|O!S|O!T|O!U}O!V}O!W!OO!X!PO!Y!QO!Z!RO![!SO~OP#OXV#OX`#OXc#OXd#OXh#OXm#OXn#OXp#OXv#OXw#OX!^#OX!u#OX#P#OX#S#OX#V#OX~P&yO!c!UO~OP_O!h!WO!i!ZO~On!^O~On!_O~OW!bO#P!`O~O!{!cO!|!cO!}!eO~OblO#S!gO#TlO#U!gO~Oj!hOg#WX[#WXk#WX~P&yOg!jO~OY!kO~Oj!lOk#YX~Ok!nO~O]!oO~Oj!pO~P$dO[!rO~P&yO[#WP~P!gO#P!uO#VTO~O]zO!O{OP!]aQ!]aV!]a`!]ac!]ad!]ah!]am!]an!]ap!]av!]aw!]a!R!]a!S!]a!T!]a!U!]a!V!]a!W!]a!X!]a!Y!]a!Z!]a![!]a!^!]a!u!]a#P!]a#S!]a#V!]ag!]aj!]a[!]ak!]a~O!O#OO!a#ZX!c#ZX!f#ZX~O!a#RO!c#PO!f#SO~O!c!UO!f#WO~Ok#WP~P!gO#SROk#XP~OY#_O_#^O~O!{!cO!|!cO!}#bO~Og!oXj!oX[!oXk!oX~P!gOj!hOg#Wa[#Wak#Wa~O#PqOj!qXk!qX~Oj!lOk#Ya~O[#kOj!pO~OPyiVyi`yicyidyihyimyinyipyivyiwyi!^yi!uyi#Pyi#Syi#Vyigyijyi[yikyi~P&yO[#lO~O]zO!O{OP!QiQ!QiV!Qi`!Qic!Qid!Qih!Qim!Qin!Qip!Qiv!Qiw!Qi!U!Qi!V!Qi!W!Qi!X!Qi!Y!Qi!Z!Qi![!Qi!^!Qi!u!Qi#P!Qi#S!Qi#V!Qig!Qij!Qi[!Qik!Qi~O!R!Qi!S!Qi!T!Qi~P2WO!R|O!S|O!T|O~P2WO]zO!O{O!R|O!S|O!T|O!U}O!V}OP!QiQ!QiV!Qi`!Qic!Qid!Qih!Qim!Qin!Qip!Qiv!Qiw!Qi!X!Qi!Y!Qi!Z!Qi![!Qi!^!Qi!u!Qi#P!Qi#S!Qi#V!Qig!Qij!Qi[!Qik!Qi~O!W!Qi~P4rO!W!OO~P4rO]zO!O{O!R|O!S|O!T|O!U}O!V}O!W!OO!X!POP!QiV!Qi`!Qic!Qid!Qih!Qim!Qin!Qip!Qiv!Qiw!Qi!Z!Qi![!Qi!^!Qi!u!Qi#P!Qi#S!Qi#V!Qig!Qij!Qi[!Qik!Qi~OQ!Qi!Y!Qi~P7WOQ!QO!Y!QO~P7WOQ!QO]zO!O{O!R|O!S|O!T|O!U}O!V}O!W!OO!X!PO!Y!QO!Z!RO~OP!QiV!Qi`!Qic!Qid!Qih!Qim!Qin!Qip!Qiv!Qiw!Qi![!Qi!^!Qi!u!Qi#P!Qi#S!Qi#V!Qig!Qij!Qi[!Qik!Qi~P9oO!c#mO~O_#nO!a!eX!c!eX!f!eX~O!a#pO!c#PO!f#qO~O!f#rO~Ok#sO~OY#tO~Oj#uOk#XX~Ok#wO~O]#zO#P#yO~OY$OO_#}O~Og!oaj!oa[!oak!oa~P&yOjsiksi~P&yO[$PO~On$RO#SRO~O#SROj!pXk!pX~Oj#uOk#Xa~OPUqVUq`UqcUqdUqhUqmUqnUqpUqvUqwUq!^Uq!uUq#PUq#SUq#VUq~P&yO_$XO~Ojqikqi~P&yO[$]O~OPUyVUy`UycUydUyhUymUynUypUyvUywUy!^Uy!uUy#PUy#SUy#VUy~P&yO_$_O~Ok$`O~P&yOPU!RVU!R`U!RcU!RdU!RhU!RmU!RnU!RpU!RvU!RwU!R!^U!R!uU!R#PU!R#SU!R#VU!R~P&yOPU!ZVU!Z`U!ZcU!ZdU!ZhU!ZmU!ZnU!ZpU!ZvU!ZwU!Z!^U!Z!uU!Z#PU!Z#SU!Z#VU!Z~P&yO!x!y#P`!OR!VR!R!S!U~",
  goto: "-]#^PPPP#_P#bPP#fP#lPP#lPP#qPPP$e%]PP%{PP%{PP%{P&h%{&n&t%{PP%{%{&xP%{%{P%x%{PPPPPPPPPP%{P%{'eP(UP(s(wP({PP)jP)p)v)|*S*Y*`*f*l*rPPPPPPPPP*xP*|+VPPPP,l,x,{-O-U-XRkQTcOeQ!ahR#`!bV#{#_#z$O!SbOPUY^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_S#Z!_#uR$Q#n!QZOPU^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_QuWQvXQwYR#i!p!SbOPUY^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_R!v{!TbOPUY^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_Q#[!_R$U#uQsVR#f!lTrV!l!T[OPUY^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_!SbOPUY^eyz|}!O!P!Q!R!S!^!h!k!o#^#t#}$R$X$_T!Wa!Y!X`OPUY^aeyz|}!O!P!Q!R!S!Y!^!h!k!o#^#t#}$R$X$_T!U_!ZT#T!V#Q!XaOPUY^aeyz|}!O!P!Q!R!S!Y!^!h!k!o#^#t#}$R$X$_Q![aR#V!YQ!djR#a!dQeOR!]eQmRR!fmQ!ioR#d!iQ#v#[R$V#vQ!msR#g!mQ!qwR#j!qQ#Q!VR#o#QQ!YaR#U!YTdOeQ#|#_Q$W#zR$Z$OS]OeQiPWoUz!^!oQxYQ!T^Q!syQ!w|Q!x}Q!y!OQ!z!PQ!{!QQ!|!RQ!}!SQ#c!hQ#e!kQ#x#^Q$T#tQ$Y#}Q$[$RQ$^$XR$a$_QpUQ!tzQ#Y!^R#h!oR#]!_RtVQ!V_R#X!ZR$S#nT!Xa!Y",
  nodeNames: "âš  JSXStartTag CompareOp LineComment BlockComment Script LetBinding let rec VariableDefinition : TypeName ) ( ParenthesizedType = Number String Escape Char BooleanLiteral VariableName ConstructorName ] [ ArrayExpression , } ListExpression list { DictExpression dict DictEntry RecordExpression Property PropertyDefinition Decorator @ % ExtensionExpression ArrowFunction ParamList => CallExpression MemberExpression . PropertyName BinaryExpression ArithOp ArithOp mod ArithOp ArithOp StringOp PipeOp CompareOp LogicOp LogicOp UnaryExpression LogicOp ParenthesizedExpression JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXMemberExpression JSXAttribute JSXEndTag JSXOpenTag JSXText JSXStartCloseTag JSXCloseTag SingleExpression",
  maxTerm: 105,
  context: trackNewline,
  nodeProps: [
    ["isolate", -3,3,4,17,""],
    ["group", 6,"Statement",-2,11,14,"Type",-19,16,17,19,20,21,22,25,28,31,34,37,40,41,44,45,48,59,61,62,"Expression Statement"],
    ["openedBy", 12,"(",23,"[",27,"{",68,"JSXStartCloseTag"],
    ["closedBy", 13,")",24,"]",30,"}",71,"JSXEndTag"]
  ],
  propSources: [rescriptHighlight],
  skippedNodes: [0,3,4,74],
  repeatNodeCount: 9,
  tokenData: "!=rnR!`OX%TXY'ZYZ)_Z['Z[]%T]^)t^p%Tpq'Zqr*prs,ksu%Tuv-Ovw-zwx/vxy5yyz6uz{7q{|8m|}:k}!O;g!O!P=e!P!QCm!Q!RIw!R![Kx![!]!(Q!]!^%T!^!_!(|!_!`!*u!`!a!,s!a!b%T!b!c!-t!c!}!.p!}#O!0[#O#P!1W#P#Q!7`#Q#R%T#R#S!8[#S#T%T#T#o!8[#o#p!9x#p#q!:t#q#r!<v#r$f%T$f$g'Z$g#BY%T#BY#BZ'Z#BZ$IS%T$IS$I_'Z$I_$I|%T$I|$I})t$I}$JO)t$JO$JT%T$JT$JU'Z$JU$KV%T$KV$KW'Z$KW&FU%T&FU&FV'Z&FV;'S%T;'S;=`'T<%l?HT%T?HT?HU'Z?HUO%Td%[Z!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%T`&SS!h`O!^%}!_;'S%};'S;=`&`<%lO%}`&cP;=`<%l%}S&kU#TSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fS'QP;=`<%l&fd'WP;=`<%l%Tn'dm!h`#TS!xYOX%TXY'ZYZ%}Z['Z[p%Tpq'Zqr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P$f%T$f$g'Z$g#BY%T#BY#BZ'Z#BZ$IS%T$IS$I_'Z$I_$JT%T$JT$JU'Z$JU$KV%T$KV$KW'Z$KW&FU%T&FU&FV'Z&FV;'S%T;'S;=`'T<%l?HT%T?HT?HU'Z?HUO%Tn)hS#US!h`!yYO!^%}!_;'S%};'S;=`&`<%lO%}n)}Z!h`#TS!yYOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf*y[!h`!^Q#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf+xZ!YQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf,rS#SU!h`O!^%}!_;'S%};'S;=`&`<%lO%}f-XZwQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf.R]!h`#TSOY%TYZ%}Zr%Trs%}sv%Tvw.zw!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf/TZ!h`!ZQ#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf/}]!h`#TSOY0vYZ%}Zr0vrs2rsw0vwx%Tx!^0v!^!_3n!_#O0v#O#P4v#P;'S0v;'S;=`5s<%lO0vf0}]!h`#TSOY%TYZ%}Zr%Trs%}sw%Twx1vx!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf2PZcQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tb2wU!h`Ow%}wx3Zx!^%}!_;'S%};'S;=`&`<%lO%}b3bScQ!h`O!^%}!_;'S%};'S;=`&`<%lO%}U3sW#TSOY&fZr&fsw&fwx4]x#O&f#P;'S&f;'S;=`&}<%lO&fU4dUcQ#TSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fb4{U!h`O!^2r!^!_5_!_;'S2r;'S;=`5j;=`<%l5_<%lO2rQ5bPwx5eQ5jOcQb5mQwx5e;=`<%l2rf5vP;=`<%l0vf6SZ]Q!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf7OZ[Q!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf7zZ!h`#TS!RQOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf8v]!h`#TS!UQOY%TYZ%}Zr%Trs%}s{%T{|9o|!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf9xZ!h`!WQ#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf:tZjQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf;p]!h`#TS!VQOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`%T!`!a<i!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf<rZ!h`!XQ#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn=n]!h`#TS!OYOY%TYZ%}Zr%Trs%}s!Q%T!Q![>g![!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf>pc!h`#TS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![>g![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#S>g#S#X%T#X#Y?{#Y;'S%T;'S;=`'T<%lO%Tf@Sc!h`#TSOY%TYZ%}Zr%Trs%}s{%T{|A_|}%T}!OA_!O!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TfAf_!h`#TSOY%TYZ%}Zr%Trs%}s!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TfBn_!h`#TS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TnCva!h`#TS!SQOY%TYZ%}Zr%Trs%}sz%Tz{D{{!P%T!P!QEw!Q!^%T!^!_&f!_!`%T!`!aH{!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TnEUZ!zY!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TnFQZ!h`#TSRYOYEwYZ%}ZrEwrsFss!^Ew!^!_HO!_#OEw#O#PFs#P;'SEw;'S;=`Hu<%lOEwjFzV!h`RYOYFsYZ%}Z!^Fs!^!_Ga!_;'SFs;'S;=`Gx<%lOFsYGfSRYOYGaZ;'SGa;'S;=`Gr<%lOGaYGuP;=`<%lGajG{P;=`<%lFs^HVW#TSRYOYHOZrHOrsGas#OHO#O#PGa#P;'SHO;'S;=`Ho<%lOHO^HrP;=`<%lHOnHxP;=`<%lEwlIUZ!aW!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TfJQl!h`#TS`QOY%TYZ%}Zr%Trs%}s!O%T!O!P>g!P!Q%T!Q![Kx![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#SKx#S#U%T#U#VNf#V#X%T#X#Y?{#Y#b%T#b#cMj#c#d!!z#d#l%T#l#m!%Y#m;'S%T;'S;=`'T<%lO%TfLRg!h`#TS`QOY%TYZ%}Zr%Trs%}s!O%T!O!P>g!P!Q%T!Q![Kx![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#SKx#S#X%T#X#Y?{#Y#b%T#b#cMj#c;'S%T;'S;=`'T<%lO%TfMsZ!h`#TS`QOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TfNm`!h`#TSOY%TYZ%}Zr%Trs%}s!Q%T!Q!R! o!R!S! o!S!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S! o#S;'S%T;'S;=`'T<%lO%Tf! x`!h`#TS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q!R! o!R!S! o!S!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S! o#S;'S%T;'S;=`'T<%lO%Tf!#R_!h`#TSOY%TYZ%}Zr%Trs%}s!Q%T!Q!Y!$Q!Y!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S!$Q#S;'S%T;'S;=`'T<%lO%Tf!$Z_!h`#TS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q!Y!$Q!Y!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S!$Q#S;'S%T;'S;=`'T<%lO%Tf!%ac!h`#TSOY%TYZ%}Zr%Trs%}s!Q%T!Q![!&l![!^%T!^!_&f!_!c%T!c!i!&l!i#O%T#O#P%}#P#R%T#R#S!&l#S#T%T#T#Z!&l#Z;'S%T;'S;=`'T<%lO%Tf!&uc!h`#TS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![!&l![!^%T!^!_&f!_!c%T!c!i!&l!i#O%T#O#P%}#P#R%T#R#S!&l#S#T%T#T#Z!&l#Z;'S%T;'S;=`'T<%lO%Tn!(ZZYY!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!)RY#TSOY&fZr&fs!P&f!P!Q!)q!Q!_&f!_!`!*[!`#O&f#P;'S&f;'S;=`&}<%lO&fd!)xU!i`#TSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fU!*cU!YQ#TSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fn!+O]_W!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`!a!+w!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!,QZ{Q!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn!-O[!YQ!fW!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!-}ZvQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!.ye!h`#TS#VQOY%TYZ%}Zr%Trs%}st%Ttu!.pu!Q%T!Q![!.p![!^%T!^!_&f!_!c%T!c!}!.p!}#O%T#O#P%}#P#R%T#R#S!.p#S#T%T#T#o!.p#o;'S%T;'S;=`'T<%lO%Tf!0eZhQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Td!1]X!h`O!^!1x!^!_!2]!_#i!1x#i#j!2b#j#l!1x#l#m!4Q#m;'S!1x;'S;=`!7Y<%lO!1xd!2PSbS!h`O!^%}!_;'S%};'S;=`&`<%lO%}S!2bObSd!2g[!h`O!Q%}!Q![!3]![!^%}!_!c%}!c!i!3]!i#T%}#T#Z!3]#Z#o%}#o#p!5j#p;'S%};'S;=`&`<%lO%}d!3bY!h`O!Q%}!Q![!4Q![!^%}!_!c%}!c!i!4Q!i#T%}#T#Z!4Q#Z;'S%};'S;=`&`<%lO%}d!4VY!h`O!Q%}!Q![!4u![!^%}!_!c%}!c!i!4u!i#T%}#T#Z!4u#Z;'S%};'S;=`&`<%lO%}d!4zY!h`O!Q%}!Q![!1x![!^%}!_!c%}!c!i!1x!i#T%}#T#Z!1x#Z;'S%};'S;=`&`<%lO%}d!5oY!h`O!Q%}!Q![!6_![!^%}!_!c%}!c!i!6_!i#T%}#T#Z!6_#Z;'S%};'S;=`&`<%lO%}d!6d[!h`O!Q%}!Q![!6_![!^%}!_!c%}!c!i!6_!i#T%}#T#Z!6_#Z#q%}#q#r!1x#r;'S%};'S;=`&`<%lO%}d!7]P;=`<%l!1xf!7iZgQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn!8ge!cW!h`#TS#PQOY%TYZ%}Zr%Trs%}st%Ttu!8[u!Q%T!Q![!8[![!^%T!^!_&f!_!c%T!c!}!8[!}#O%T#O#P%}#P#R%T#R#S!8[#S#T%T#T#o!8[#o;'S%T;'S;=`'T<%lO%Tf!:RZnQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!:{_!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`%T!`!a<i!a#O%T#O#P%}#P#p%T#p#q!;z#q;'S%T;'S;=`'T<%lO%Tf!<TZ!h`![Q#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!=PZkQ!h`#TSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%T",
  tokenizers: [1, 2, 3, 4, insertSemicolon, jsx, new lr.LocalTokenGroup("j~RQYZXz{^~^O!|~~aP!P!Qd~iO!}~~", 25, 89)],
  topRules: {"Script":[0,5],"SingleExpression":[1,73]},
  dynamicPrecedences: {"41":1},
  specialized: [{term: 93, get: (value) => spec_identifier[value] || -1}],
  tokenPrec: 1612
});

exports.parser = parser;
