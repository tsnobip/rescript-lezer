'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const insertSemi = 100,
  JSXStartTag = 1,
  LessThan = 2,
  spaces = 102,
  newline = 103,
  LineComment = 3,
  BlockComment = 4;

/* Hand-written tokenizers for ReScript tokens that can't be
   expressed by lezer's built-in tokenizer. */

const space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
               8201, 8202, 8232, 8233, 8239, 8287, 12288];

const braceR = 125, slash = 47, lt = 60;

const trackNewline = new lr.ContextTracker({
  start: false,
  shift(context, term) {
    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline
  },
  strict: false
});

const insertSemicolon = new lr.ExternalTokenizer((input, stack) => {
  let {next} = input;
  if (next == braceR || next == -1 || stack.context)
    input.acceptToken(insertSemi);
}, {contextual: true, fallback: true});

function identifierChar(ch, start) {
  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch == 95 || ch >= 192 ||
    !start && ch >= 48 && ch <= 57
}

// JSX tokenizer that also handles < comparison
const jsx = new lr.ExternalTokenizer((input, stack) => {
  if (input.next != lt) return
  input.advance();
  if (input.next == slash) return // Could be </
  
  // JSX tags don't have space after <
  // If there's space, it's likely a comparison operator
  if (space.indexOf(input.next) > -1) {
    input.acceptToken(LessThan);
    return
  }
  
  // If followed by an identifier character, it's JSX
  if (identifierChar(input.next, true)) {
    input.acceptToken(JSXStartTag);
  } else {
    // Not an identifier, treat as less-than
    input.acceptToken(LessThan);
  }
});

const rescriptHighlight = highlight.styleTags({
  "let rec module type open external exception mutable": highlight.tags.definitionKeyword,
  "if else switch when while for in to mod": highlight.tags.controlKeyword,
  "true false": highlight.tags.bool,
  VariableName: highlight.tags.variableName,
  VariableDefinition: highlight.tags.definition(highlight.tags.variableName),
  TypeName: highlight.tags.typeName,
  TypeDefinition: highlight.tags.definition(highlight.tags.typeName),
  ModuleName: highlight.tags.namespace,
  ConstructorName: highlight.tags.className,
  PropertyName: highlight.tags.propertyName,
  Label: highlight.tags.labelName,
  Number: highlight.tags.number,
  String: highlight.tags.string,
  Char: highlight.tags.character,
  Escape: highlight.tags.escape,
  ArithOp: highlight.tags.arithmeticOperator,
  LogicOp: highlight.tags.logicOperator,
  CompareOp: highlight.tags.compareOperator,
  StringOp: highlight.tags.operator,
  PipeOp: highlight.tags.operator,
  "( )": highlight.tags.paren,
  "[ ]": highlight.tags.squareBracket,
  "{ }": highlight.tags.brace,
  ". , : ;": highlight.tags.separator,
  "=> =": highlight.tags.definitionOperator,
  "~ ?": highlight.tags.modifier,
  "|": highlight.tags.punctuation,
  "_": highlight.tags.keyword,
  LineComment: highlight.tags.lineComment,
  BlockComment: highlight.tags.blockComment,
  
  "JSXStartTag JSXEndTag JSXSelfCloseEndTag JSXStartCloseTag": highlight.tags.angleBracket,
  JSXIdentifier: highlight.tags.tagName,
  JSXText: highlight.tags.content
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_identifier = {__proto__:null,let:14, rec:16, true:42, false:42, list:60, dict:66, switch:86, mod:128};
const parser = lr.LRParser.deserialize({
  version: 14,
  states: ":jQ`QqOOO!mQqOOP#wOPOOO#|OQO'#CmOOQp'#Cr'#CrOOQp'#Cs'#CsO$[QqO'#CvO$cQPO'#DPO$kQPO'#DSO$kQPO'#DVO!mQqO'#DxO%qQqO'#EoO'ZQPO'#DfO(ZQqO'#ElO!mQqO'#DvO)gQSO'#D{OOQp'#Dy'#DyO)lOxO'#DyOOQp'#Eo'#EoOOQp'#El'#ElOOQp'#EW'#EWQ`QqOOO)wQPO'#CyO)|QPO'#C|O!mQqO'#DWO*RQPO'#CbQ'`QqOOP*ZO!bO'#C`POOO)C@Z)C@ZOOOO'#EX'#EXO*fOQO,59XOOQp,59X,59XO*tQqO'#EtO+UQPO,59bOOQO'#DR'#DRO+ZQPO'#DQO+`QPO'#EvO+hQPO,59kOOQp,59n,59nO+mQPO,59qO+rQqO,5:RO+yQqO,5:dO!mQqO,5:QO,QQqO,5:SO,XQPO,5:TO!mQqO,5:VO!mQqO,5:VO!mQqO,5:VO!mQqO,5:VO!mQqO,5:VO!mQqO,5:VO!mQqO,5:VO,aQqO,5:bO.sQSO'#EyO/RQSO,5:gOOOp'#E{'#E{OOOp'#Eb'#EbO)lOxO,5:eO/^QSO'#ETOOQp,5:e,5:eOOQp-E8U-E8UO/fQqO,59eO/mQPO,59hO/uQqO,59rOOQO'#Ce'#CeO/|QSO,58|O*UQPO,58|POOO'#EV'#EVP0UO!bO,58zPOOO,58z,58zOOOO-E8V-E8VOOQp1G.s1G.sO0aQqO'#EYO0qQPO,5;`OOQp1G.|1G.|O!mQqO,59lO1PQPO'#E[O1[QPO,5;bOOQp1G/V1G/VO,QQqO1G/]O$kQPO'#E`O1dQPO1G/mOOQp1G0O1G0OO1lQqO1G/lO3XQPO1G/nOOQp'#Dc'#DcOOQp1G/o1G/oO5gQqO1G/qO5tQqO1G/qO8bQqO1G/qO8iQqO1G/qO:|QqO1G/qO;WQqO1G/qO<YQqO1G/qO=xQSO,5:iO=}QSO'#EOO>]QSO1G0ROOQp1G0R1G0ROOOp1G0W1G0WOOQO'#Ea'#EaOOOp-E8`-E8`OOQp1G0P1G0POOQp,5:o,5:oO>hQSO,5:oO>mQPO1G/PO>rQPO'#DOO>wQPO'#EuO?PQPO1G/SO?UQPO1G/^O!mQqO1G.hO?^QPO1G.hO?fQSO1G.hPOOO-E8T-E8TPOOO1G.f1G.fO?nQqO,5:tOOQO-E8W-E8WO@OQqO1G/WOOQO,5:v,5:vOOQO-E8Y-E8YO@YQPO7+$wOOQO,5:z,5:zOOQO-E8^-E8^OOQO7+%X7+%XOOQp7+%Y7+%YOOQO1G0T1G0TO@_QPO,5:jOOQO-E8_-E8_OOQp7+%m7+%mOOOp7+%r7+%rOOQp1G0Z1G0ZOOQp7+$k7+$kO!mQqO,59jO@gQPO'#EZO@rQPO,5;aOOQp7+$n7+$nO@zQPO'#DYOOQO'#E]'#E]OAiQPO7+$xOOQp7+$x7+$xOAqQqO7+$SOOQO'#Cg'#CgO?^QPO'#CjOOQO'#En'#EnOB}QSO7+$SO!mQqO7+$SO?^QPO7+$SOOQp<<Hc<<HcOOQO'#Ez'#EzO!mQqO'#EzOOQO1G0U1G0UOCSQqO1G/UOOQO,5:u,5:uOOQO-E8X-E8XOOQO'#D]'#D]OC^QPO'#D_OCrQPO'#D`OCyQPO'#DaO@zQPO'#DdOOQO'#D['#D[ODRQPO,59tOOQO-E8Z-E8ZOOQp<<Hd<<HdODWQPO,59UO!mQqO<<GnOD]QqO<<GnOEiQSO<<GnOEnQqO,5;fOEuQPO,59yOE|QPO'#EwOFXQPO,59zOF^QPO'#DbOFiQPO'#ExOFqQPO,59{OFvQPO,5:OO!mQqO1G/`OOQO1G.p1G.pOF{QqOAN=YO!mQqOAN=YOOQO1G1Q1G1QOHXQPO1G/eOH^QPO'#E^OHkQPO,5;cOOQO1G/f1G/fO@zQPO,59|OHvQPO'#E_OIRQPO,5;dOOQO1G/g1G/gOOQO1G/j1G/jOIZQqO7+$zOIeQqOG22tOOQO7+%P7+%POOQO,5:x,5:xOOQO-E8[-E8[OOQO1G/h1G/hOOQO,5:y,5:yOOQO-E8]-E8]",
  stateData: "J}~O#YOS#ZOSROS#[QQ~OP_OViO]YO`bOcbOdbOebOiUOnfOoVOqgOwWOxXO{hO!d^O!k^O#aSO#dRO#gTO~OP_O]YO`bOcbOdbOebOiUOnfOoVOqgOwWOxXO{hO!d^O!k^O#aSO#dRO#gTO~O#[kO~ObmO#doO#emO#foO~Oh#hP~P!mO#arOl#jP~O#aSO~O!XzOQ#cX]#cX!^#cX!`#cX!a#cX!b#cX!c#cX!d#cX!e#cX!f#cX!g#cX!h#cX!i#cX[#cX~OP#cXV#cX`#cXc#cXd#cXe#cXi#cXn#cXo#cXq#cXw#cXx#cX{#cX!k#cX#V#cX#a#cX#d#cX#g#cXh#cXk#cXl#cX}#cX~P$pO!XzO~OQ!RO]{O!^|O!`}O!a}O!b}O!c!OO!d!OO!e!PO!f!QO!g!RO!h!SO!i!TO~OP#`XV#`X`#`Xc#`Xd#`Xe#`Xi#`Xn#`Xo#`Xq#`Xw#`Xx#`X{#`X!k#`X#V#`X#a#`X#d#`X#g#`X~P'`O!p!VO~OP_O!u!XO!v![O~Oo!_O~Oo!`O~OW!dO#a!bO~O#]!eO#^!eO#_!gO~ObmO#d!iO#emO#f!iO~Ok!jOh#hX[#hXl#hX~P'`Oh!lO~OY!mO~Ok!nOl#jX~Ol!pO~O]!qO~Ok!rO~P$pO[!tO~P'`O[#hP~P!mO#a!wO#gTO~O]{O!^|OP!jaQ!jaV!ja`!jac!jad!jae!jai!jan!jao!jaq!jaw!jax!ja{!ja!`!ja!a!ja!b!ja!c!ja!d!ja!e!ja!f!ja!g!ja!h!ja!i!ja!k!ja#V!ja#a!ja#d!ja#g!jah!jak!ja[!jal!ja}!ja~O!^#QO!n#mX!p#mX!s#mX~O!n#TO!p#RO!s#UO~O!p!VO!s#YO~Ol#hP~P!mO#dROl#iP~Oo#`O~P'`OY#bO_#aO~O#]!eO#^!eO#_#eO~Oh!|Xk!|X[!|Xl!|X~P!mOk!jOh#ha[#hal#ha~O#arOk#OXl#OX~Ok!nOl#ja~O[#nOk!rO~OP!YiV!Yi`!Yic!Yid!Yie!Yii!Yin!Yio!Yiq!Yiw!Yix!Yi{!Yi!k!Yi#V!Yi#a!Yi#d!Yi#g!Yih!Yik!Yi[!Yil!Yi}!Yi~P'`O[#oO~O]{O!^|OP!_iQ!_iV!_i`!_ic!_id!_ie!_ii!_in!_io!_iq!_iw!_ix!_i{!_i!c!_i!d!_i!e!_i!f!_i!g!_i!h!_i!i!_i!k!_i#V!_i#a!_i#d!_i#g!_ih!_ik!_i[!_il!_i}!_i~O!`!_i!a!_i!b!_i~P3^O!`}O!a}O!b}O~P3^O]{O!^|O!`}O!a}O!b}O!c!OO!d!OOP!_iQ!_iV!_i`!_ic!_id!_ie!_ii!_in!_io!_iq!_iw!_ix!_i{!_i!f!_i!g!_i!h!_i!i!_i!k!_i#V!_i#a!_i#d!_i#g!_ih!_ik!_i[!_il!_i}!_i~O!e!_i~P6RO!e!PO~P6RO]{O!^|O!`}O!a}O!b}O!c!OO!d!OO!e!PO!f!QOP!_iV!_i`!_ic!_id!_ie!_ii!_in!_io!_iq!_iw!_ix!_i{!_i!h!_i!i!_i!k!_i#V!_i#a!_i#d!_i#g!_ih!_ik!_i[!_il!_i}!_i~OQ!_i!g!_i~P8pOQ!RO!g!RO~P8pOQ!RO]{O!^|O!`}O!a}O!b}O!c!OO!d!OO!e!PO!f!QO!g!RO!h!SO~OP!_iV!_i`!_ic!_id!_ie!_ii!_in!_io!_iq!_iw!_ix!_i{!_i!i!_i!k!_i#V!_i#a!_i#d!_i#g!_ih!_ik!_i[!_il!_i}!_i~P;bO!p#pO~O_#qO!n!rX!p!rX!s!rX~O!n#sO!p#RO!s#tO~O!s#uO~Ol#vO~OY#wO~Ok#xOl#iX~Ol#zO~Ol$OO}#{O~O]$RO#a$QO~OY$VO_$UO~Oh!|ak!|a[!|al!|a~P'`Oktilti~P'`O[$WO~Oo$YO#dRO~O#dROk!}Xl!}X~Ok#xOl#ia~O]$cO`$dOe$dOi$aOo$bO!Q$_O#aSO#dRO#gTO~Ol$gO}#{O~OPUqVUq`UqcUqdUqeUqiUqnUqoUqqUqwUqxUq{Uq!kUq#VUq#aUq#dUq#gUq~P'`O_$iO~Okrilri~P'`O]$mO!X!RXh!RXk!RX[!RXl!RX~Oh#kP~P@zO#a!wOl#lP~O!X$tO~O[$uO~OPUyVUy`UycUydUyeUyiUynUyoUyqUywUyxUy{Uy!kUy#VUy#aUy#dUy#gUy~P'`O_$wO~Ol$xO~P'`O[#kP~P@zOk$zOh#kX[#kX~Oh$|O~OY$}Ok!UXl!UX~Ok%OOl#lX~Ol%QO~O[%RO~OPU!RVU!R`U!RcU!RdU!ReU!RiU!RnU!RoU!RqU!RwU!RxU!R{U!R!kU!R#VU!R#aU!R#dU!R#gU!R~P'`O[%UO~Oh#QXk#QX[#QX~P@zOk$zOh#ka[#ka~O#a!wOk#RXl#RX~Ok%OOl#la~Ol|q}|q~P'`OPU!ZVU!Z`U!ZcU!ZdU!ZeU!ZiU!ZnU!ZoU!ZqU!ZwU!ZxU!Z{U!Z!kU!Z#VU!Z#aU!Z#dU!Z#gU!Z~P'`O#Y#Z#a!Q`R!d!^!`!a!c~",
  goto: "/}#pPPPP#qP#tPP#xP$OPP$OPP$TPPPP%R&TPP&}PP&}PP&}P'l&}'r'x&}PP&}&}P'|P(Q$yP$y$y$y(b(h$yP&}(o&}&}P&}PPPPPPPPPP&}P&})^P*PP*p*tP*xPP+iP+o+u+{,R,X,_,e,k,q,w,}-TPPPPPPPPP-ZP-_-hPPPP/T/a/d/g/m/p/v/yRlQTcOeQ!ciR#c!dV$S#b$R$V!WbOPUY^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$wS#]!`#xQ$X#q]$d#{$a$c$m$z$}!UZOPU^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$wQvWQwXQxYQ#l!r]$d#{$a$c$m$z$}!WbOPUY^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$wQ!x|]$`#{$a$c$m$z$}!XbOPUY^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$wQ#^!`R$]#xQtVR#i!nTsV!nT#|#`#}Q$e#{S$n$a$mQ$s$cQ%V$zR%X$}Q$q$bR%Y%OQ!x|T$p$b%O!X[OPUY^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$w!WbOPUY^ehz{}!O!P!Q!R!S!T!_!j!m!q#a#w$U$Y$i$t$wT!Xa!Z!]`OPUY^aehz{}!O!P!Q!R!S!T!Z!_!j!m!q#a#w$U$Y$i$t$wT!V_![T#V!W#S!]aOPUY^aehz{}!O!P!Q!R!S!T!Z!_!j!m!q#a#w$U$Y$i$t$wQ!]aR#X!ZQ!fkR#d!fQeOR!^eQnRR!hnQ!kpR#g!kQ#y#^R$^#yQ!otR#j!oQ#}#`R$f#}Q${$nR%W${Q%P$qR%Z%PQ!sxR#m!sQ#S!WR#r#SQ!ZaR#W!ZTdOeQ$T#bQ$h$RR$k$VS]OeQjPWpU{!_!qQyYQ!U^Q!ahQ!uzQ!y}Q!z!OQ!{!PQ!|!QQ!}!RQ#O!SQ#P!TQ#f!jQ#h!mQ$P#aQ$[#wQ$j$UQ$l$YQ$v$iQ%S$tR%T$wQqUQ!v{Q#[!_R#k!qR#_!`RuVQ$o$aR$y$mR$r$bQ!W_R#Z![R$Z#qT!Ya!Z",
  nodeNames: "âš  JSXStartTag CompareOp LineComment BlockComment Script LetBinding let rec VariableDefinition : TypeName ) ( ParenthesizedType = Number String Escape TemplateString Char BooleanLiteral VariableName ConstructorName ] [ ArrayExpression , } ListExpression list { DictExpression dict DictEntry RecordExpression Property PropertyDefinition Decorator @ % ExtensionExpression SwitchExpression switch SwitchCase | Pattern Wildcard _ ConstructorPattern ArrayPattern RecordPattern PatternField PropertyName ParenthesizedPattern => ArrowFunction ParamList CallExpression MemberExpression . BinaryExpression ArithOp ArithOp mod ArithOp ArithOp StringOp PipeOp CompareOp LogicOp LogicOp UnaryExpression LogicOp ParenthesizedExpression JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXMemberExpression JSXAttribute JSXEndTag JSXOpenTag JSXText JSXStartCloseTag JSXCloseTag SingleExpression",
  maxTerm: 123,
  context: trackNewline,
  nodeProps: [
    ["isolate", -3,3,4,17,""],
    ["group", 6,"Statement",-2,11,14,"Type",-21,16,17,19,20,21,22,23,26,29,32,35,38,41,42,56,58,59,61,72,74,75,"Expression Statement"],
    ["openedBy", 12,"(",24,"[",28,"{",81,"JSXStartCloseTag"],
    ["closedBy", 13,")",25,"]",31,"}",84,"JSXEndTag"]
  ],
  propSources: [rescriptHighlight],
  skippedNodes: [0,3,4,87],
  repeatNodeCount: 12,
  tokenData: "!DqnR!`OX%TXY'ZYZ)_Z['Z[]%T]^)t^p%Tpq'Zqr*prs,ksu%Tuv-Ovw-zwx/vxy5yyz6uz{7q{|8m|}:k}!O;g!O!P=e!P!QCm!Q!RIw!R![Kx![!]!(Q!]!^%T!^!_!(|!_!`!*u!`!a!,s!a!b%T!b!c!-t!c!}!.p!}#O!0[#O#P!1W#P#Q!7`#Q#R%T#R#S!8[#S#T!;h#T#o!9z#o#p!@u#p#q!Aq#q#r!Cu#r$f%T$f$g'Z$g#BY%T#BY#BZ'Z#BZ$IS%T$IS$I_'Z$I_$I|%T$I|$I})t$I}$JO)t$JO$JT%T$JT$JU'Z$JU$KV%T$KV$KW'Z$KW&FU%T&FU&FV'Z&FV;'S%T;'S;=`'T<%l?HT%T?HT?HU'Z?HUO%Td%[Z!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%T`&SS!u`O!^%}!_;'S%};'S;=`&`<%lO%}`&cP;=`<%l%}S&kU#eSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fS'QP;=`<%l&fd'WP;=`<%l%Tn'dm!u`#eS#YYOX%TXY'ZYZ%}Z['Z[p%Tpq'Zqr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P$f%T$f$g'Z$g#BY%T#BY#BZ'Z#BZ$IS%T$IS$I_'Z$I_$JT%T$JT$JU'Z$JU$KV%T$KV$KW'Z$KW&FU%T&FU&FV'Z&FV;'S%T;'S;=`'T<%l?HT%T?HT?HU'Z?HUO%Tn)hS#fS!u`#ZYO!^%}!_;'S%};'S;=`&`<%lO%}n)}Z!u`#eS#ZYOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf*y[!u`!kQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf+xZ!gQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf,rS#dU!u`O!^%}!_;'S%};'S;=`&`<%lO%}f-XZxQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf.R]!u`#eSOY%TYZ%}Zr%Trs%}sv%Tvw.zw!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf/TZ!u`!hQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf/}]!u`#eSOY0vYZ%}Zr0vrs2rsw0vwx%Tx!^0v!^!_3n!_#O0v#O#P4v#P;'S0v;'S;=`5s<%lO0vf0}]!u`#eSOY%TYZ%}Zr%Trs%}sw%Twx1vx!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf2PZdQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tb2wU!u`Ow%}wx3Zx!^%}!_;'S%};'S;=`&`<%lO%}b3bSdQ!u`O!^%}!_;'S%};'S;=`&`<%lO%}U3sW#eSOY&fZr&fsw&fwx4]x#O&f#P;'S&f;'S;=`&}<%lO&fU4dUdQ#eSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fb4{U!u`O!^2r!^!_5_!_;'S2r;'S;=`5j;=`<%l5_<%lO2rQ5bPwx5eQ5jOdQb5mQwx5e;=`<%l2rf5vP;=`<%l0vf6SZ]Q!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf7OZ[Q!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf7zZ!u`#eS!`QOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf8v]!u`#eS!cQOY%TYZ%}Zr%Trs%}s{%T{|9o|!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf9xZ!u`!eQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf:tZkQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf;p]!u`#eS!dQOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`%T!`!a<i!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf<rZ!u`!fQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn=n]!u`#eS!^YOY%TYZ%}Zr%Trs%}s!Q%T!Q![>g![!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf>pc!u`#eS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![>g![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#S>g#S#X%T#X#Y?{#Y;'S%T;'S;=`'T<%lO%Tf@Sc!u`#eSOY%TYZ%}Zr%Trs%}s{%T{|A_|}%T}!OA_!O!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TfAf_!u`#eSOY%TYZ%}Zr%Trs%}s!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TfBn_!u`#eS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![Be![!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#SBe#S;'S%T;'S;=`'T<%lO%TnCva!u`#eS!aQOY%TYZ%}Zr%Trs%}sz%Tz{D{{!P%T!P!QEw!Q!^%T!^!_&f!_!`%T!`!aH{!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TnEUZ#[Y!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TnFQZ!u`#eSRYOYEwYZ%}ZrEwrsFss!^Ew!^!_HO!_#OEw#O#PFs#P;'SEw;'S;=`Hu<%lOEwjFzV!u`RYOYFsYZ%}Z!^Fs!^!_Ga!_;'SFs;'S;=`Gx<%lOFsYGfSRYOYGaZ;'SGa;'S;=`Gr<%lOGaYGuP;=`<%lGajG{P;=`<%lFs^HVW#eSRYOYHOZrHOrsGas#OHO#O#PGa#P;'SHO;'S;=`Ho<%lOHO^HrP;=`<%lHOnHxP;=`<%lEwlIUZ!nW!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TfJQl!u`#eS`QOY%TYZ%}Zr%Trs%}s!O%T!O!P>g!P!Q%T!Q![Kx![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#SKx#S#U%T#U#VNf#V#X%T#X#Y?{#Y#b%T#b#cMj#c#d!!z#d#l%T#l#m!%Y#m;'S%T;'S;=`'T<%lO%TfLRg!u`#eS`QOY%TYZ%}Zr%Trs%}s!O%T!O!P>g!P!Q%T!Q![Kx![!^%T!^!_&f!_!g%T!g!h?{!h#O%T#O#P%}#P#R%T#R#SKx#S#X%T#X#Y?{#Y#b%T#b#cMj#c;'S%T;'S;=`'T<%lO%TfMsZ!u`#eS`QOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%TfNm`!u`#eSOY%TYZ%}Zr%Trs%}s!Q%T!Q!R! o!R!S! o!S!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S! o#S;'S%T;'S;=`'T<%lO%Tf! x`!u`#eS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q!R! o!R!S! o!S!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S! o#S;'S%T;'S;=`'T<%lO%Tf!#R_!u`#eSOY%TYZ%}Zr%Trs%}s!Q%T!Q!Y!$Q!Y!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S!$Q#S;'S%T;'S;=`'T<%lO%Tf!$Z_!u`#eS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q!Y!$Q!Y!^%T!^!_&f!_#O%T#O#P%}#P#R%T#R#S!$Q#S;'S%T;'S;=`'T<%lO%Tf!%ac!u`#eSOY%TYZ%}Zr%Trs%}s!Q%T!Q![!&l![!^%T!^!_&f!_!c%T!c!i!&l!i#O%T#O#P%}#P#R%T#R#S!&l#S#T%T#T#Z!&l#Z;'S%T;'S;=`'T<%lO%Tf!&uc!u`#eS`QOY%TYZ%}Zr%Trs%}s!Q%T!Q![!&l![!^%T!^!_&f!_!c%T!c!i!&l!i#O%T#O#P%}#P#R%T#R#S!&l#S#T%T#T#Z!&l#Z;'S%T;'S;=`'T<%lO%Tn!(ZZYY!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!)RY#eSOY&fZr&fs!P&f!P!Q!)q!Q!_&f!_!`!*[!`#O&f#P;'S&f;'S;=`&}<%lO&fd!)xU!v`#eSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fU!*cU!gQ#eSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fn!+O]_W!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`!a!+w!a#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!,QZ!XQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn!-O[!gQ!sW!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`+o!`#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!-}ZwQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!.ye!u`#eS#gQOY%TYZ%}Zr%Trs%}st%Ttu!.pu!Q%T!Q![!.p![!^%T!^!_&f!_!c%T!c!}!.p!}#O%T#O#P%}#P#R%T#R#S!.p#S#T%T#T#o!.p#o;'S%T;'S;=`'T<%lO%Tf!0eZiQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Td!1]X!u`O!^!1x!^!_!2]!_#i!1x#i#j!2b#j#l!1x#l#m!4Q#m;'S!1x;'S;=`!7Y<%lO!1xd!2PSbS!u`O!^%}!_;'S%};'S;=`&`<%lO%}S!2bObSd!2g[!u`O!Q%}!Q![!3]![!^%}!_!c%}!c!i!3]!i#T%}#T#Z!3]#Z#o%}#o#p!5j#p;'S%};'S;=`&`<%lO%}d!3bY!u`O!Q%}!Q![!4Q![!^%}!_!c%}!c!i!4Q!i#T%}#T#Z!4Q#Z;'S%};'S;=`&`<%lO%}d!4VY!u`O!Q%}!Q![!4u![!^%}!_!c%}!c!i!4u!i#T%}#T#Z!4u#Z;'S%};'S;=`&`<%lO%}d!4zY!u`O!Q%}!Q![!1x![!^%}!_!c%}!c!i!1x!i#T%}#T#Z!1x#Z;'S%};'S;=`&`<%lO%}d!5oY!u`O!Q%}!Q![!6_![!^%}!_!c%}!c!i!6_!i#T%}#T#Z!6_#Z;'S%};'S;=`&`<%lO%}d!6d[!u`O!Q%}!Q![!6_![!^%}!_!c%}!c!i!6_!i#T%}#T#Z!6_#Z#q%}#q#r!1x#r;'S%};'S;=`&`<%lO%}d!7]P;=`<%l!1xf!7iZhQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tn!8ie!pW!u`#eS#aQ!QQOY%TYZ%}Zr%Trs%}st%Ttu!9zu!Q%T!Q![!9z![!^%T!^!_&f!_!c%T!c!}!9z!}#O%T#O#P%}#P#R%T#R#S!9z#S#T%T#T#o!9z#o;'S%T;'S;=`'T<%lO%Tn!:Ve!pW!u`#eS#aQOY%TYZ%}Zr%Trs%}st%Ttu!9zu!Q%T!Q![!9z![!^%T!^!_&f!_!c%T!c!}!9z!}#O%T#O#P%}#P#R%T#R#S!9z#S#T%T#T#o!9z#o;'S%T;'S;=`'T<%lO%Tf!;o]!u`#eSOY!;hYZ!<hZr!;hrs!<hs!^!;h!^!_!>[!_#O!;h#O#P!<h#P#S!;h#S#T!?s#T;'S!;h;'S;=`!@o<%lO!;hb!<mV!u`O!^!<h!^!_!=S!_#S!<h#S#T!=q#T;'S!<h;'S;=`!>U<%lO!<hQ!=VTO#S!=S#S#T!=f#T;'S!=S;'S;=`!=k<%lO!=SQ!=kOcQQ!=nP;=`<%l!=Sb!=xS!u`cQO!^%}!_;'S%};'S;=`&`<%lO%}b!>XP;=`<%l!<hU!>aZ#eSOY!>[YZ!=SZr!>[rs!=Ss#O!>[#O#P!=S#P#S!>[#S#T!?S#T;'S!>[;'S;=`!?m<%lO!>[U!?ZUcQ#eSOY&fZr&fs#O&f#P;'S&f;'S;=`&}<%lO&fU!?pP;=`<%l!>[f!?|Z!u`cQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!@rP;=`<%l!;hf!AOZoQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!Az_}Q!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_!`%T!`!a<i!a#O%T#O#P%}#P#p%T#p#q!By#q;'S%T;'S;=`'T<%lO%Tf!CSZ!u`!iQ#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%Tf!DOZlQ!u`#eSOY%TYZ%}Zr%Trs%}s!^%T!^!_&f!_#O%T#O#P%}#P;'S%T;'S;=`'T<%lO%T",
  tokenizers: [1, 2, 3, 4, insertSemicolon, jsx, new lr.LocalTokenGroup("j~RQYZXz{^~^O#^~~aP!P!Qd~iO#_~~", 25, 105)],
  topRules: {"Script":[0,5],"SingleExpression":[1,86]},
  dynamicPrecedences: {"42":1,"44":2,"56":1},
  specialized: [{term: 109, get: (value) => spec_identifier[value] || -1}],
  tokenPrec: 1919
});

exports.parser = parser;
